local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\173\8","\231\131\38\32"),function(v42) if (v9(v42,5 -3 )==81) then local v104=0;while true do if (v104==0) then v30=v8(v11(v42,1,1));return "";end end else local v105=v10(v8(v42,16));if v30 then local v112=0;local v113;while true do if (v112==0) then v113=v13(v105,v30);v30=nil;v112=1;end if (v112==1) then return v113;end end else return v105;end end end);local function v31(v43,v44,v45) if v45 then local v106=0;local v107;while true do if (0==v106) then v107=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v107-(v107%1) ;end end else local v108=(3 -1)^(v44-1) ;return (((v43%(v108 + v108))>=v108) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (1==v46) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * (43216383 -26439167)) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==2) then v61=v31(v58,640 -(555 + 64) ,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (1==v56) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end if (v56==3) then if (v61==(931 -(857 + 74))) then if (v60==0) then return v62 * 0 ;else local v123=0;while true do if (0==v123) then v61=1;v59=0;break;end end end elseif (v61==(2615 -(367 + 201))) then return ((v60==0) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^(979 -(214 + 713))))) ;end if (v56==0) then v57=v34();v58=v34();v56=1;end end end local function v36(v63) local v64;if  not v63 then v63=v34();if (v63==0) then return "";end end v64=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;local v65={};for v79=1, #v64 do v65[v79]=v10(v9(v11(v64,v79,v79)));end return v14(v65);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v81=1,v70 do local v82=0;local v83;local v84;while true do if (v82==1) then if (v83==(1 + 0)) then v84=v32()~=0 ;elseif (v83==(1 + 1)) then v84=v35();elseif (v83==3) then v84=v36();end v71[v81]=v84;break;end if (0==v82) then v83=v32();v84=nil;v82=1;end end end v69[3]=v32();for v85=1,v34() do local v86=0;local v87;while true do if (v86==0) then v87=v32();if (v31(v87,1,1)==0) then local v119=0;local v120;local v121;local v122;while true do if (v119==1) then v122={v33(),v33(),nil,nil};if (v120==0) then local v125=0;while true do if (v125==0) then v122[3]=v33();v122[4]=v33();break;end end elseif (v120==1) then v122[3]=v34();elseif (v120==2) then v122[3]=v34() -(2^16) ;elseif (v120==3) then v122[3]=v34() -(2^16) ;v122[881 -(282 + 595) ]=v33();end v119=2;end if (0==v119) then v120=v31(v87,2,3);v121=v31(v87,4,6);v119=1;end if (v119==3) then if (v31(v121,3,3 + 0 )==1) then v122[4]=v71[v122[4]];end v66[v85]=v122;break;end if (v119==2) then if (v31(v121,1,1)==1) then v122[2]=v71[v122[2]];end if (v31(v121,2,1639 -(1523 + 114) )==1) then v122[3]=v71[v122[3]];end v119=3;end end end break;end end end for v88=1,v34() do v67[v88-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v90=v76;local v91=v77;local v92=v78;local v93=v38;local v94=1;local v95= -1;local v96={};local v97={...};local v98=v20("#",...) -1 ;local v99={};local v100={};for v109=0,v98 do if (v109>=v92) then v96[v109-v92 ]=v97[v109 + (1 -0) ];else v100[v109]=v97[v109 + 1 ];end end local v101=(v98-v92) + 1 ;local v102;local v103;while true do v102=v90[v94];v103=v102[1];if (v103<=40) then if (v103<=(1084 -(68 + 997))) then if (v103<=9) then if (v103<=(1274 -(226 + 1044))) then if (v103<=1) then if (v103>0) then local v135=0;local v136;local v137;local v138;local v139;while true do if (v135==1) then v95=(v138 + v136) -1 ;v139=0;v135=2;end if (v135==0) then v136=v102[2];v137,v138=v93(v100[v136](v100[v136 + 1 ]));v135=1;end if (v135==2) then for v307=v136,v95 do v139=v139 + 1 ;v100[v307]=v137[v139];end break;end end else v100[v102[2]]=v74[v102[3]];end elseif (v103<=2) then v94=v102[3];elseif (v103==3) then v100[v102[8 -6 ]][v100[v102[3]]]=v100[v102[4]];else v100[v102[2]]();end elseif (v103<=6) then if (v103>5) then if (v100[v102[2]]==v102[4]) then v94=v94 + 1 ;else v94=v102[3];end else v100[v102[2]]=v75[v102[3]];end elseif (v103<=7) then v100[v102[2]]=v100[v102[3]][v102[4]];elseif (v103>8) then for v291=v102[2],v102[3] do v100[v291]=nil;end else v100[v102[2]]=v100[v102[3]]%v100[v102[4]] ;end elseif (v103<=14) then if (v103<=(128 -(32 + 85))) then if (v103>10) then do return v100[v102[2]]();end else v100[v102[2]]={};end elseif (v103<=12) then v100[v102[2]]=v102[3 + 0 ];elseif (v103>13) then do return;end elseif  not v100[v102[2]] then v94=v94 + 1 + 0 ;else v94=v102[3];end elseif (v103<=16) then if (v103>15) then v75[v102[3]]=v100[v102[2]];else local v152=v102[959 -(892 + 65) ];v100[v152]=v100[v152]();end elseif (v103<=17) then local v154=0;local v155;while true do if (v154==0) then v155=v102[2];v100[v155](v21(v100,v155 + (2 -1) ,v102[3]));break;end end elseif (v103==18) then v100[v102[3 -1 ]]= #v100[v102[3]];else local v233=0;local v234;local v235;while true do if (v233==0) then v234=v102[2];v235=v100[v102[3]];v233=1;end if (v233==1) then v100[v234 + 1 ]=v235;v100[v234]=v235[v102[4]];break;end end end elseif (v103<=(52 -23)) then if (v103<=24) then if (v103<=21) then if (v103==20) then v100[v102[2]][v102[3]]=v100[v102[4]];else v100[v102[352 -(87 + 263) ]]= #v100[v102[3]];end elseif (v103<=22) then if v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end elseif (v103==23) then v100[v102[2]][v100[v102[3]]]=v100[v102[4]];elseif (v100[v102[182 -(67 + 113) ]]==v102[4]) then v94=v94 + 1 ;else v94=v102[3];end elseif (v103<=26) then if (v103>25) then v100[v102[2]]=v102[3];else do return;end end elseif (v103<=27) then local v161=v102[2];local v162=v100[v161 + 2 ];local v163=v100[v161] + v162 ;v100[v161]=v163;if (v162>0) then if (v163<=v100[v161 + 1 ]) then v94=v102[3 + 0 ];v100[v161 + 3 ]=v163;end elseif (v163>=v100[v161 + 1 ]) then v94=v102[3];v100[v161 + 3 ]=v163;end elseif (v103>28) then local v239=0;local v240;local v241;local v242;while true do if (v239==0) then v240=v102[2];v241=v100[v240 + 2 ];v239=1;end if (v239==2) then if (v241>(0 -0)) then if (v242<=v100[v240 + 1 ]) then local v388=0;while true do if (v388==0) then v94=v102[3];v100[v240 + 3 ]=v242;break;end end end elseif (v242>=v100[v240 + 1 ]) then local v389=0;while true do if (v389==0) then v94=v102[3];v100[v240 + 3 ]=v242;break;end end end break;end if (v239==1) then v242=v100[v240] + v241 ;v100[v240]=v242;v239=2;end end else local v243=v102[2];local v244,v245=v93(v100[v243](v21(v100,v243 + 1 ,v102[3])));v95=(v245 + v243) -1 ;local v246=0;for v294=v243,v95 do v246=v246 + 1 ;v100[v294]=v244[v246];end end elseif (v103<=34) then if (v103<=(23 + 8)) then if (v103==30) then local v165=v102[7 -5 ];local v166,v167=v93(v100[v165](v100[v165 + 1 ]));v95=(v167 + v165) -1 ;local v168=952 -(802 + 150) ;for v223=v165,v95 do local v224=0;while true do if (v224==0) then v168=v168 + (2 -1) ;v100[v223]=v166[v168];break;end end end else local v169=0;local v170;local v171;local v172;while true do if (v169==1) then v172={};v171=v18({},{[v7("\137\142\83\64\19\52\176","\52\214\209\58\46\119\81\200")]=function(v318,v319) local v320=0;local v321;while true do if (v320==0) then v321=v172[v319];return v321[1][v321[2]];end end end,[v7("\122\243\56\46\155\185\75\200\51\51","\208\37\172\86\75\236")]=function(v322,v323,v324) local v325=0;local v326;while true do if (0==v325) then v326=v172[v323];v326[1 -0 ][v326[2]]=v324;break;end end end});v169=2;end if (v169==2) then for v327=1 + 0 ,v102[4] do v94=v94 + (998 -(915 + 82)) ;local v328=v90[v94];if (v328[1]==50) then v172[v327-1 ]={v100,v328[3]};else v172[v327-1 ]={v74,v328[3]};end v99[ #v99 + 1 + 0 ]=v172;end v100[v102[2 -0 ]]=v40(v170,v171,v75);break;end if (v169==0) then v170=v91[v102[3]];v171=nil;v169=1;end end end elseif (v103<=32) then local v173=0;local v174;while true do if (v173==0) then v174=v102[2];v100[v174]=v100[v174]();break;end end elseif (v103==33) then local v247=v102[2];v100[v247](v100[v247 + 1 ]);elseif  not v100[v102[2]] then v94=v94 + (1188 -(1069 + 118)) ;else v94=v102[3];end elseif (v103<=37) then if (v103<=(79 -44)) then v100[v102[2]]=v100[v102[3]][v102[4]];elseif (v103>36) then if v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end else local v248=v102[3 -1 ];local v249=v100[v248];local v250=v100[v248 + 1 + 1 ];if (v250>0) then if (v249>v100[v248 + 1 ]) then v94=v102[3];else v100[v248 + 3 ]=v249;end elseif (v249<v100[v248 + 1 ]) then v94=v102[3];else v100[v248 + 3 ]=v249;end end elseif (v103<=38) then v75[v102[3]]=v100[v102[2]];elseif (v103>(68 -29)) then v100[v102[2]]=v100[v102[3 + 0 ]]%v102[4] ;else local v252=0;local v253;local v254;local v255;while true do if (v252==2) then for v368=1,v102[4] do local v369=0;local v370;while true do if (0==v369) then v94=v94 + 1 ;v370=v90[v94];v369=1;end if (1==v369) then if (v370[1]==50) then v255[v368-1 ]={v100,v370[3]};else v255[v368-1 ]={v74,v370[3]};end v99[ #v99 + 1 ]=v255;break;end end end v100[v102[2]]=v40(v253,v254,v75);break;end if (1==v252) then v255={};v254=v18({},{[v7("\150\130\230\133\168\172\165","\204\201\221\143\235")]=function(v371,v372) local v373=0;local v374;while true do if (0==v373) then v374=v255[v372];return v374[1][v374[2]];end end end,[v7("\72\186\240\68\96\140\240\69\114\157","\33\23\229\158")]=function(v375,v376,v377) local v378=v255[v376];v378[1][v378[2]]=v377;end});v252=2;end if (0==v252) then v253=v91[v102[3]];v254=nil;v252=1;end end end elseif (v103<=60) then if (v103<=50) then if (v103<=45) then if (v103<=42) then if (v103==41) then local v179=v102[2];v100[v179](v100[v179 + 1 ]);else v100[v102[2]][v102[3]]=v100[v102[4]];end elseif (v103<=43) then v100[v102[2]]=v102[3] + v100[v102[4]] ;elseif (v103==44) then v100[v102[2]]=v75[v102[3]];else local v258=0;local v259;while true do if (v258==0) then v259=v102[2];do return v100[v259](v21(v100,v259 + 1 ,v102[3]));end break;end end end elseif (v103<=(838 -(368 + 423))) then if (v103>46) then local v183=0;local v184;while true do if (v183==0) then v184=v102[2];do return v21(v100,v184,v95);end break;end end else local v185=v102[2];v100[v185]=v100[v185](v21(v100,v185 + 1 ,v102[3]));end elseif (v103<=48) then v100[v102[2]]=v40(v91[v102[3]],nil,v75);elseif (v103>49) then v100[v102[2]]=v100[v102[3]];else local v262=0;local v263;local v264;while true do if (v262==1) then v100[v263 + 1 ]=v264;v100[v263]=v264[v102[4]];break;end if (v262==0) then v263=v102[2];v264=v100[v102[3]];v262=1;end end end elseif (v103<=55) then if (v103<=52) then if (v103==(160 -109)) then v100[v102[2]]=v40(v91[v102[3]],nil,v75);else local v189=v102[2];local v190=v100[v189];for v225=v189 + 1 ,v95 do v15(v190,v100[v225]);end end elseif (v103<=53) then v100[v102[2]]=v100[v102[21 -(10 + 8) ]] + v102[4] ;elseif (v103==54) then v100[v102[7 -5 ]][v100[v102[445 -(416 + 26) ]]]=v102[4];else local v267=0;local v268;local v269;while true do if (v267==1) then for v380=v268 + 1 ,v95 do v15(v269,v100[v380]);end break;end if (0==v267) then v268=v102[6 -4 ];v269=v100[v268];v267=1;end end end elseif (v103<=57) then if (v103==56) then v100[v102[2]][v102[2 + 1 ]]=v102[4];else v94=v102[3];end elseif (v103<=(102 -44)) then v100[v102[440 -(145 + 293) ]]=v74[v102[3]];elseif (v103==(489 -(44 + 386))) then v100[v102[2]][v100[v102[3]]]=v102[4];else v100[v102[2]]=v100[v102[3]]%v102[4] ;end elseif (v103<=70) then if (v103<=65) then if (v103<=62) then if (v103>61) then local v197=v102[2];v100[v197]=v100[v197](v21(v100,v197 + 1 ,v95));else for v226=v102[2],v102[3] do v100[v226]=nil;end end elseif (v103<=63) then local v199=0;local v200;local v201;local v202;local v203;while true do if (0==v199) then v200=v102[2];v201,v202=v93(v100[v200](v21(v100,v200 + 1 ,v95)));v199=1;end if (v199==2) then for v332=v200,v95 do v203=v203 + (1487 -(998 + 488)) ;v100[v332]=v201[v203];end break;end if (v199==1) then v95=(v202 + v200) -1 ;v203=0;v199=2;end end elseif (v103==64) then local v273=v102[2];do return v21(v100,v273,v95);end else v100[v102[2]]=v100[v102[1 + 2 ]]%v100[v102[4]] ;end elseif (v103<=(55 + 12)) then if (v103>66) then local v204=v102[2];do return v100[v204](v21(v100,v204 + 1 ,v102[3]));end else v100[v102[2]]=v100[v102[3]];end elseif (v103<=68) then local v207=0;local v208;while true do if (v207==0) then v208=v102[2];v100[v208]=v100[v208](v21(v100,v208 + 1 ,v102[3]));break;end end elseif (v103>69) then local v275=0;local v276;local v277;local v278;local v279;while true do if (v275==1) then v95=(v278 + v276) -1 ;v279=0;v275=2;end if (v275==0) then v276=v102[2];v277,v278=v93(v100[v276](v21(v100,v276 + 1 ,v102[3])));v275=1;end if (v275==2) then for v381=v276,v95 do local v382=0;while true do if (0==v382) then v279=v279 + 1 ;v100[v381]=v277[v279];break;end end end break;end end else do return v100[v102[2]]();end end elseif (v103<=75) then if (v103<=72) then if (v103==71) then local v209=v102[774 -(201 + 571) ];local v210=v100[v209];local v211=v100[v209 + 2 ];if (v211>0) then if (v210>v100[v209 + 1 ]) then v94=v102[3];else v100[v209 + 3 ]=v210;end elseif (v210<v100[v209 + (1139 -(116 + 1022)) ]) then v94=v102[3];else v100[v209 + 3 ]=v210;end else local v212=0;local v213;while true do if (v212==0) then v213=v102[2];v100[v213](v21(v100,v213 + (4 -3) ,v95));break;end end end elseif (v103<=(43 + 30)) then v100[v102[2]][v102[10 -7 ]]=v102[4];elseif (v103==74) then local v280=0;local v281;while true do if (0==v280) then v281=v102[2];v100[v281](v21(v100,v281 + 1 ,v95));break;end end else v100[v102[2]]();end elseif (v103<=78) then if (v103<=76) then v100[v102[2]]={};elseif (v103>77) then v100[v102[2]]=v100[v102[3]] + v102[4] ;else local v283=v102[2];v100[v283]=v100[v283](v21(v100,v283 + 1 ,v95));end elseif (v103<=79) then local v217=0;local v218;local v219;local v220;local v221;while true do if (v217==2) then for v339=v218,v95 do local v340=0;while true do if (v340==0) then v221=v221 + (3 -2) ;v100[v339]=v219[v221];break;end end end break;end if (v217==1) then v95=(v220 + v218) -1 ;v221=0;v217=2;end if (v217==0) then v218=v102[2];v219,v220=v93(v100[v218](v21(v100,v218 + 1 ,v95)));v217=1;end end elseif (v103>80) then v100[v102[2]]=v102[3] + v100[v102[4]] ;else local v286=0;local v287;while true do if (v286==0) then v287=v102[2];v100[v287](v21(v100,v287 + 1 ,v102[3]));break;end end end v94=v94 + 1 ;end end;end return v40(v39(),{},v28)(...);end return v23("LOL!0D3Q0003063Q00737472696E6703043Q006368617203043Q00627974652Q033Q0073756203053Q0062697433322Q033Q0062697403043Q0062786F7203053Q007461626C6503063Q00636F6E63617403063Q00696E7365727403053Q006D6174636803083Q00746F6E756D62657203053Q007063612Q6C00243Q0012053Q00013Q0020235Q0002001205000100013Q002023000100010003001205000200013Q002023000200020004001205000300053Q00060D0003000A000100010004023Q000A0001001205000300063Q002023000400030007001205000500083Q002023000500050009001205000600083Q00202300060006000A00062700073Q000100062Q00323Q00064Q00328Q00323Q00044Q00323Q00014Q00323Q00024Q00323Q00053Q001205000800013Q00202300080008000B0012050009000C3Q001205000A000D3Q000627000B0001000100052Q00323Q00074Q00323Q00094Q00323Q00084Q00323Q000A4Q00323Q000B4Q0042000C000B4Q000B000C00014Q0040000C6Q00193Q00013Q00023Q00023Q00026Q00F03F026Q00704002264Q000A00025Q00121A000300014Q001500045Q00121A000500013Q0004470003002100012Q003A00076Q0042000800024Q003A000900014Q003A000A00024Q003A000B00034Q003A000C00044Q0042000D6Q0042000E00063Q002035000F000600012Q0046000C000F4Q004D000B3Q00022Q003A000C00034Q003A000D00044Q0042000E00014Q0015000F00014Q0041000F0006000F00102B000F0001000F2Q0015001000014Q004100100006001000102B0010000100100020350010001000012Q0046000D00104Q003F000C6Q004D000A3Q0002002028000A000A00022Q001E0009000A4Q004800073Q000100041B0003000500012Q003A000300054Q0042000400024Q002D000300044Q004000036Q00193Q00017Q00043Q00027Q004003053Q003A25642B3A2Q033Q0025642B026Q00F03F001C3Q0006275Q000100019Q002Q003A000100014Q003A000200024Q003A000300024Q000A00046Q003A000500034Q004200066Q0009000700074Q0046000500074Q003700043Q000100202300040004000100121A000500024Q002E00030005000200121A000400034Q0046000200044Q004D00013Q000200260600010018000100040004023Q001800012Q004200016Q000A00026Q002D000100024Q004000015Q0004023Q001B00012Q003A000100044Q000B000100014Q004000016Q00193Q00013Q00013Q00BC3Q00030A3Q006C6F6164737472696E6703043Q0067616D6503073Q00482Q7470476574038A3Q002BD93ED5EF798265D7FD34832DCCE82BD828D0EF26DF29CAF237C824D1B220C2278AFE26C830DCAD719D65C7F022C567C7F022C567C7F022C567C9F32F8238C0FA308222C0FD27DE65C8FD2AC365C7F022C526CAF06DC13FC4A337C221C0F27EEA02F6DD179D0BE4DD02EC0BE6AA75F807EAC802F51DE4CA71E37EE7D308EA1CE9C516F77FF1CE079A1B03053Q009C43AD4AA5030A3Q004D616B6557696E646F7703043Q001AB6441303073Q002654D72976DC4603163Q0065182B04FB4205231EBE531E2306BE4306231FF3550403053Q009E30764272030B3Q00832D143343B7FEA62D053B03073Q009BCB44705613C50100030A3Q0075DC20F96377EBFE4FDA03083Q009826BD569C20188503093Q00D559B354F363A25EE803043Q00269C37C703103Q00AA7879320A34EA51A779692B077DF54D03083Q0023C81D1C4873149A030C3Q003AB0DFD9842B1216B3D5DA9F03073Q005479DFB1BFED4C03123Q009953CCBA231013C9BA4289932A513DCCBE4403083Q00A1DB36A9C05A305003073Q0067657467656E762Q033Q006F6C642Q012Q033Q006E6577030A3Q006F6C646D652Q73616765034Q00030A3Q006E65776D652Q73616765030B3Q006F6C647761692Q74696D65026Q000840030B3Q006E652Q7761692Q74696D6503073Q006F6C647370616D03073Q006E65777370616D03103Q004D616B654E6F74696669636174696F6E03043Q0095D84F5803053Q007EDBB9223D03073Q002FDC5B767763E003083Q00876CAE3E121E179303073Q0095E624DF1DA02703083Q00A7D6894AAB78CE5303283Q00B8F32054E8B3CBFD3359FDE789E9725FFDA291E97215FAA28EEA2B0CAAE784FE724FF7A587FF2A1403063Q00C7EB90523D9803053Q002E1BB82C0203043Q004B6776D903173Q00D5566815AA0DC2407910E3518800244CEA4D9301294DE103063Q007EA7341074D903043Q00FC272D8503073Q009CA84E40E0D479026Q00144003073Q004D616B6554616203043Q0029EFA8CB03043Q00AE678EC52Q033Q0079245B03073Q009836483F58453E03043Q00FDC7E15203043Q003CB4A48E03173Q004A5C1D2834FE174C57017368A2460C06567A73B84B010603073Q0072383E6549478D030B3Q0088FBDEC9B1FCD6EBB6E5C203043Q00A4D889BB03043Q00FCE73CB703073Q006BB28651D2C69E2Q033Q00160B9503053Q00CA586EE2A603043Q00EA0C8DF903053Q00AAA36FE29703173Q000332AA395D242C0539B66201787D4568E16B1A6270486803073Q00497150D2582E57030B3Q00B13EC81FEE9421E21CEB9803053Q0087E14CAD72030A3Q00412Q6454657874626F7803043Q0034EC2QB503073Q00C77A8DD8D0CCDD03073Q0080D803E379F1A803063Q0096CDBD70901803073Q000181B94D11840503083Q007045E4DF2C64E871030D3Q00E01A1FC7927595D50F17D6B76E03073Q00E6B47F67B3D61C03083Q00AF04534AE640E38703073Q0080EC653F268421030A3Q004765745365727669636503103Q0099BA14569FE5DFB9BD2241A4FDC6AFAC03073Q00AFCCC97124D68B030C3Q00546F756368456E61626C656403093Q00412Q64536C6964657203043Q0069CD38D903053Q006427AC55BC03093Q009A79B094739971B48503053Q0053CD18D9E02Q033Q00CBCCC303043Q005D86A5AD027Q00402Q033Q0093F3D903083Q001EDE92A1A25AAED2026Q00694003073Q00C14B760BF0426403043Q006A852E1003053Q007B2F7FF34803063Q00203840139C3A03063Q00436F6C6F723303073Q0066726F6D524742025Q00E06F4003093Q0073C6E6445FFF8554DC03073Q00E03AA885363A92026Q00F03F03093Q006F5747E870A886065C03083Q006B39362B9D15E6E703093Q00EC8A18E1F9E8C6D68E03073Q00AFBBEB7195D9BC03083Q001FAE8D40E1787B3703073Q00185CCFE12C831903103Q007EC0BD5E32735BC6AC7F1E6F5DDABB4903063Q001D2BB3D82C7B03043Q0093D82D4903043Q002CDDB94003043Q0036E6414B03053Q00136187283F03073Q008A59352Q3A3DBA03063Q0051CE3C535B4F030D3Q007AAEC8660BCA5EA55EBBD5733D03083Q00C42ECBB0124FA32D03083Q009B23721226FAECB303073Q008FD8421E7E449B03093Q00412Q64546F2Q676C6503043Q0084C900CE03083Q0081CAA86DABA5C3B7030C3Q00114836D59E39E3314B36DFDB03073Q0086423857B8BE7403073Q0018340FBA0CE73503083Q00555C5169DB798B4103083Q00DEB25C497EDEFEB803063Q00BF9DD330251C03043Q00F11EF91903053Q005ABF7F947C03073Q0055823D0479802B03043Q007718E74E03073Q00A628A34BC94C0503073Q0071E24DC52ABC20030D3Q000E13ECA11E1FE7B42A06F1B42803043Q00D55A769403083Q00782FB85A4F5A2DBF03053Q002D3B4ED43603103Q0025458699AF20BDE5046586999027AEF503083Q00907036E3EBE64ECD03043Q009D2902F903063Q003BD3486F9CB003093Q007986EA390EB3EA204B03043Q004D2EE7832Q033Q00975DB803043Q0020DA34D62Q033Q0063162903083Q003A2E7751C891D02503073Q000F8936ADBCB12203073Q00564BEC50CCC9DD03053Q00514E7B8AEC03063Q00EB122117E59E03093Q0079B4C2A955B7C4B54403043Q00DB30DAA103093Q00D22Q705CDE61E1E97403073Q008084111C29BB2F03093Q0036330F2E1D353B0B3F03053Q003D6152665A03083Q008F2FA747C5561D0203083Q0069CC4ECB2BA7377E03103Q0090B9260C3A0AD744B199260C050DC45403083Q0031C5CA437E7364A703043Q00195AD22C03073Q003E573BBF49E03603043Q00D003F3DD03043Q00A987629A03073Q00EF722255E83FDC03073Q00A8AB1744349D53030D3Q00C074EDB9012494F561E5A8243F03073Q00E7941195CD454D03083Q00A3A6CBF755FE83AC03063Q009FE0C7A79B3703043Q00D9F231D703043Q00B297935C030C3Q00BFED4D3F52617F9FEE4D351703073Q001AEC9D2C52722C03073Q000E2BD35A3F22C103043Q003B4A4EB503083Q0006D02Q56B124D25103053Q00D345B12Q3A03043Q00496E697401E2012Q0006163Q00E02Q013Q0004023Q00E02Q01001205000100013Q001205000200023Q0020130002000200032Q003A00045Q00121A000500043Q00121A000600054Q0046000400064Q003F00026Q004D00013Q00022Q00200001000100020020130002000100062Q000A00043Q00052Q003A00055Q00121A000600073Q00121A000700084Q002E0005000700022Q003A00065Q00121A000700093Q00121A0008000A4Q002E0006000800022Q00030004000500062Q003A00055Q00121A0006000B3Q00121A0007000C4Q002E00050007000200203B00040005000D2Q003A00055Q00121A0006000E3Q00121A0007000F4Q002E00050007000200203B00040005000D2Q003A00055Q00121A000600103Q00121A000700114Q002E0005000700022Q003A00065Q00121A000700123Q00121A000800134Q002E0006000800022Q00030004000500062Q003A00055Q00121A000600143Q00121A000700154Q002E0005000700022Q003A00065Q00121A000700163Q00121A000800174Q002E0006000800022Q00030004000500062Q002E000200040002001205000300184Q002000030001000200304900030019001A001205000300184Q00200003000100020030490003001B001A001205000300184Q00200003000100020030490003001C001D001205000300184Q00200003000100020030490003001E001D001205000300184Q00200003000100020030490003001F0020001205000300184Q002000030001000200304900030021002000062700033Q000100019Q00001226000300223Q00062700030001000100019Q00001226000300233Q0020130003000100242Q000A00053Q00042Q003A00065Q00121A000700253Q00121A000800264Q002E0006000800022Q003A00075Q00121A000800273Q00121A000900284Q002E0007000900022Q00030005000600072Q003A00065Q00121A000700293Q00121A0008002A4Q002E0006000800022Q003A00075Q00121A0008002B3Q00121A0009002C4Q002E0007000900022Q00030005000600072Q003A00065Q00121A0007002D3Q00121A0008002E4Q002E0006000800022Q003A00075Q00121A0008002F3Q00121A000900304Q002E0007000900022Q00030005000600072Q003A00065Q00121A000700313Q00121A000800324Q002E00060008000200203B0005000600332Q00110003000500010020130003000200342Q000A00053Q00032Q003A00065Q00121A000700353Q00121A000800364Q002E0006000800022Q003A00075Q00121A000800373Q00121A000900384Q002E0007000900022Q00030005000600072Q003A00065Q00121A000700393Q00121A0008003A4Q002E0006000800022Q003A00075Q00121A0008003B3Q00121A0009003C4Q002E0007000900022Q00030005000600072Q003A00065Q00121A0007003D3Q00121A0008003E4Q002E00060008000200203B00050006000D2Q002E0003000500020020130004000200342Q000A00063Q00032Q003A00075Q00121A0008003F3Q00121A000900404Q002E0007000900022Q003A00085Q00121A000900413Q00121A000A00424Q002E0008000A00022Q00030006000700082Q003A00075Q00121A000800433Q00121A000900444Q002E0007000900022Q003A00085Q00121A000900453Q00121A000A00464Q002E0008000A00022Q00030006000700082Q003A00075Q00121A000800473Q00121A000900484Q002E00070009000200203B00060007000D2Q002E0004000600020020130005000300492Q000A00073Q00042Q003A00085Q00121A0009004A3Q00121A000A004B4Q002E0008000A00022Q003A00095Q00121A000A004C3Q00121A000B004D4Q002E0009000B00022Q00030007000800092Q003A00085Q00121A0009004E3Q00121A000A004F4Q002E0008000A000200203B00070008001D2Q003A00085Q00121A000900503Q00121A000A00514Q002E0008000A000200203B00070008000D2Q003A00085Q00121A000900523Q00121A000A00534Q002E0008000A0002000233000900024Q00030007000800092Q0011000500070001001205000500023Q0020130005000500542Q003A00075Q00121A000800553Q00121A000900564Q0046000700094Q004D00053Q0002002023000500050057002606000500032Q01000D0004023Q00032Q010020130005000300582Q000A00073Q00082Q003A00085Q00121A000900593Q00121A000A005A4Q002E0008000A00022Q003A00095Q00121A000A005B3Q00121A000B005C4Q002E0009000B00022Q00030007000800092Q003A00085Q00121A0009005D3Q00121A000A005E4Q002E0008000A000200203B00070008005F2Q003A00085Q00121A000900603Q00121A000A00614Q002E0008000A000200203B0007000800622Q003A00085Q00121A000900633Q00121A000A00644Q002E0008000A000200203B00070008005F2Q003A00085Q00121A000900653Q00121A000A00664Q002E0008000A0002001205000900673Q00202300090009006800121A000A00693Q00121A000B00693Q00121A000C00694Q002E0009000C00022Q00030007000800092Q003A00085Q00121A0009006A3Q00121A000A006B4Q002E0008000A000200203B00070008006C2Q003A00085Q00121A0009006D3Q00121A000A006E4Q002E0008000A00022Q003A00095Q00121A000A006F3Q00121A000B00704Q002E0009000B00022Q00030007000800092Q003A00085Q00121A000900713Q00121A000A00724Q002E0008000A0002000233000900034Q00030007000800092Q0011000500070001001205000500023Q0020130005000500542Q003A00075Q00121A000800733Q00121A000900744Q0046000700094Q004D00053Q0002002023000500050057002606000500292Q01001A0004023Q00292Q010020130005000300492Q000A00073Q00042Q003A00085Q00121A000900753Q00121A000A00764Q002E0008000A00022Q003A00095Q00121A000A00773Q00121A000B00784Q002E0009000B00022Q00030007000800092Q003A00085Q00121A000900793Q00121A000A007A4Q002E0008000A000200203B00070008001D2Q003A00085Q00121A0009007B3Q00121A000A007C4Q002E0008000A000200203B00070008000D2Q003A00085Q00121A0009007D3Q00121A000A007E4Q002E0008000A0002000233000900044Q00030007000800092Q001100050007000100201300050003007F2Q000A00073Q00032Q003A00085Q00121A000900803Q00121A000A00814Q002E0008000A00022Q003A00095Q00121A000A00823Q00121A000B00834Q002E0009000B00022Q00030007000800092Q003A00085Q00121A000900843Q00121A000A00854Q002E0008000A000200203B00070008000D2Q003A00085Q00121A000900863Q00121A000A00874Q002E0008000A0002000233000900054Q00030007000800092Q00110005000700010020130005000400492Q000A00073Q00042Q003A00085Q00121A000900883Q00121A000A00894Q002E0008000A00022Q003A00095Q00121A000A008A3Q00121A000B008B4Q002E0009000B00022Q00030007000800092Q003A00085Q00121A0009008C3Q00121A000A008D4Q002E0008000A000200203B00070008001D2Q003A00085Q00121A0009008E3Q00121A000A008F4Q002E0008000A000200203B00070008000D2Q003A00085Q00121A000900903Q00121A000A00914Q002E0008000A0002000233000900064Q00030007000800092Q0011000500070001001205000500023Q0020130005000500542Q003A00075Q00121A000800923Q00121A000900934Q0046000700094Q004D00053Q0002002023000500050057002606000500A02Q01000D0004023Q00A02Q010020130005000400582Q000A00073Q00082Q003A00085Q00121A000900943Q00121A000A00954Q002E0008000A00022Q003A00095Q00121A000A00963Q00121A000B00974Q002E0009000B00022Q00030007000800092Q003A00085Q00121A000900983Q00121A000A00994Q002E0008000A000200203B00070008005F2Q003A00085Q00121A0009009A3Q00121A000A009B4Q002E0008000A000200203B0007000800622Q003A00085Q00121A0009009C3Q00121A000A009D4Q002E0008000A000200203B00070008005F2Q003A00085Q00121A0009009E3Q00121A000A009F4Q002E0008000A0002001205000900673Q00202300090009006800121A000A00693Q00121A000B00693Q00121A000C00694Q002E0009000C00022Q00030007000800092Q003A00085Q00121A000900A03Q00121A000A00A14Q002E0008000A000200203B00070008006C2Q003A00085Q00121A000900A23Q00121A000A00A34Q002E0008000A00022Q003A00095Q00121A000A00A43Q00121A000B00A54Q002E0009000B00022Q00030007000800092Q003A00085Q00121A000900A63Q00121A000A00A74Q002E0008000A0002000233000900074Q00030007000800092Q0011000500070001001205000500023Q0020130005000500542Q003A00075Q00121A000800A83Q00121A000900A94Q0046000700094Q004D00053Q0002002023000500050057002606000500C62Q01001A0004023Q00C62Q010020130005000400492Q000A00073Q00042Q003A00085Q00121A000900AA3Q00121A000A00AB4Q002E0008000A00022Q003A00095Q00121A000A00AC3Q00121A000B00AD4Q002E0009000B00022Q00030007000800092Q003A00085Q00121A000900AE3Q00121A000A00AF4Q002E0008000A000200203B00070008001D2Q003A00085Q00121A000900B03Q00121A000A00B14Q002E0008000A000200203B00070008000D2Q003A00085Q00121A000900B23Q00121A000A00B34Q002E0008000A0002000233000900084Q00030007000800092Q001100050007000100201300050004007F2Q000A00073Q00032Q003A00085Q00121A000900B43Q00121A000A00B54Q002E0008000A00022Q003A00095Q00121A000A00B63Q00121A000B00B74Q002E0009000B00022Q00030007000800092Q003A00085Q00121A000900B83Q00121A000A00B94Q002E0008000A000200203B00070008000D2Q003A00085Q00121A000900BA3Q00121A000A00BB4Q002E0008000A0002000233000900094Q00030007000800092Q00110005000700010020130005000100BC2Q00290005000200010004023Q00E12Q0100202300013Q006C2Q00193Q00013Q000A3Q00133Q0003073Q0067657467656E762Q033Q006F6C642Q01028Q0003043Q0067616D65030A3Q004765745365727669636503113Q007B471029404101314C463331465001224C03043Q0045292260030C3Q0057616974466F724368696C64031B3Q0098C6D10B1727A8E0DF0B1618A5D0C32Q0F08B4C2C32F142EB2D7C403063Q004BDCA3B76A6203113Q0031BB921ADC11A98A30DC30BF9A22DC11AE03053Q00B962DAEB57030A3Q0046697265536572766572030A3Q006F6C646D652Q736167652Q033Q00EA302B03063Q00CAAB5C4786BE03043Q0077616974030B3Q006F6C647761692Q74696D6500313Q0012053Q00014Q00203Q000100020020235Q00020026063Q0030000100030004023Q0030000100121A3Q00044Q0009000100013Q00260600010007000100040004023Q0007000100121A000100043Q0026060001000A000100040004023Q000A0001001205000200053Q0020130002000200062Q003A00045Q00121A000500073Q00121A000600084Q0046000400064Q004D00023Q00020020130002000200092Q003A00045Q00121A0005000A3Q00121A0006000B4Q0046000400064Q004D00023Q00020020130002000200092Q003A00045Q00121A0005000C3Q00121A0006000D4Q0046000400064Q004D00023Q000200201300020002000E001205000400014Q002000040001000200202300040004000F2Q003A00055Q00121A000600103Q00121A000700114Q0046000500074Q004800023Q0001001205000200123Q001205000300134Q00290002000200010004025Q00010004023Q000A00010004025Q00010004023Q000700010004025Q00012Q00193Q00017Q000E3Q0003073Q0067657467656E762Q033Q006E65772Q01028Q0003043Q0067616D65030A3Q0047657453657276696365030F3Q001DC4349C0AC92D9C1AC43E9E20C22903043Q00E849A14C030C3Q00546578744368612Q6E656C73030A3Q0052425847656E6572616C03093Q0053656E644173796E63030A3Q006E65776D652Q7361676503043Q0077616974030B3Q006E652Q7761692Q74696D65001D3Q0012053Q00014Q00203Q000100020020235Q00020026063Q001C000100030004023Q001C000100121A3Q00043Q0026063Q0006000100040004023Q00060001001205000100053Q0020130001000100062Q003A00035Q00121A000400073Q00121A000500084Q0046000300054Q004D00013Q000200202300010001000900202300010001000A00201300010001000B001205000300014Q002000030001000200202300030003000C2Q00110001000300010012050001000D3Q0012050002000E4Q00290001000200010004025Q00010004023Q000600010004025Q00012Q00193Q00017Q00023Q0003073Q0067657467656E76030A3Q006F6C646D652Q7361676501043Q001205000100014Q0020000100010002001014000100024Q00193Q00017Q00023Q0003073Q0067657467656E76030B3Q006F6C647761692Q74696D6501043Q001205000100014Q0020000100010002001014000100024Q00193Q00017Q00023Q0003073Q0067657467656E76030B3Q006F6C647761692Q74696D6501043Q001205000100014Q0020000100010002001014000100024Q00193Q00017Q00033Q0003073Q0067657467656E762Q033Q006F6C6403073Q006F6C647370616D01063Q001205000100014Q0020000100010002001014000100023Q001205000100034Q00040001000100012Q00193Q00017Q00023Q0003073Q0067657467656E76030A3Q006E65776D652Q7361676501043Q001205000100014Q0020000100010002001014000100024Q00193Q00017Q00023Q0003073Q0067657467656E76030B3Q006E652Q7761692Q74696D6501043Q001205000100014Q0020000100010002001014000100024Q00193Q00017Q00023Q0003073Q0067657467656E76030B3Q006E652Q7761692Q74696D6501043Q001205000100014Q0020000100010002001014000100024Q00193Q00017Q00043Q00028Q0003073Q0067657467656E762Q033Q006E657703073Q006E65777370616D010B3Q00121A000100013Q00260600010001000100010004023Q00010001001205000200024Q0020000200010002001014000200033Q001205000200044Q00040002000100010004023Q000A00010004023Q000100012Q00193Q00017Q00",v17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
